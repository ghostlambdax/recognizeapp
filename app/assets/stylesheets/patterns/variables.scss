@import 'bourbon-mixins.scss';

$cubic: cubic-bezier(.17, .67, .17, .95);
$recognizeColor: #1568A6;
$headerBg: $recognizeColor !default;
$headerBg_style: $headerBg !default;

$bodyText: #000000 !default;

$orange: #ffa500 !default;
$lightRed: #fceaef !default;

$lightBodyBg: #f4f4f4 !default;
$lightGray: #ecf0f1 !default;
$gray: darken($lightGray, 50%) !default;

$logo: "chrome/logo-mark-white.png" !default;

$headerA: #fff !default;

$blueDark: #06263a !default;

$actionDarkBlue: #25608F !default;

$blueLight: #9cd9ff !default;

$darkened: darken($headerBg, 20%);

$greenBright: $darkened !default;

$bgColor: #ffffff !default;

$buttonPrimaryBg: $headerBg !default;

$btnBlueTopColor: lighten($buttonPrimaryBg, 20%) !default;

$btnBlueBottomColor: #5cb8ff !default;

$hrColor: #B4B7BB !default;
$dividerColor: $hrColor !default;

$warningBg: #d70932 !default;

$linkColor: #008ce5 !default;

$contestBlue: #025491 !default;
$contestLightBlue: #7796AE !default;

$highlightTopColor: $greenBright !default;

$highlightBottomColor: darken($greenBright, 10%) !default;

$menuBg: darken(desaturate($headerBg, 50%), 20%) !default;

$overlayColor: darken($menuBg, 10%) !default;

$menuHighlightColor: lighten($headerBg, 8%) !default;

$swalDeleteButtonColor: #dd6b55;

$success: #0FB034 !default;

$hightlightMarketingTop: #489c0d;
$hightlightMarketingBottom: #278e00;

$headerSettingsIcon: 'chrome/header/white/gear.png' !default;
$headerRecognizeIcon: 'chrome/header/white/recognize.png' !default;
$headerStreamIcon: 'chrome/header/white/stream.png' !default;
$headerStatsIcon: 'chrome/header/white/stats.png' !default;
$headerUsersIcon: 'chrome/header/white/users.png' !default;
$headerBadgeIcon: 'chrome/header/white/shield.png' !default;
$headerTrophyIcon: 'chrome/header/white/trophy.png' !default;
$headerRewardsIcon: 'chrome/header/white/rewards.png' !default;
$gearIcon: 'chrome/header/gear.png' !default;

$lightHeaderColor: lighten(desaturate($headerBg, 50%), 30%);

$widgetBoxBg: #fff !default;

$btnLightTopColor: lighten(desaturate($headerBg, 60%), 70%);

// responsive breakpoints
$phone: 576px !default;
$mobile: $phone;
$tablet: 768px !default;
$desktop-small: 992px !default;
$desktop-medium: 1200px !default;

$headerMobileBreak: $tablet;

$expBlue: #3872FF;
$homeBg: #0C5F98;
$blockquoteQuoteColor: #ccc;

$defaultFontFamily: "Myriad Pro", "helvetica neue", helvetica, arial !default;
$latoFontFamily: Lato, "San Francisco", "Helvetica Neue", Helvetica, "Myriad Pro", Arial, sans-serif !default;

$h3: 26px;

@mixin latoFontFamily {
  font-family: $latoFontFamily;
}

@mixin defaultFontFamily {
  font-family: $defaultFontFamily;
}

$homeDarkBg: #f3f4f7;
$homeDarkBorder: #e7e8ea;

$lighterGrayTextColor: $lightGray;

@mixin arrowRightLarge() {
  background: transparent asset-url('icons/arrow-right-large.png') no-repeat center center;
  width: 28px;
  height: 44px;
  text-indent: -9999px;
  display: block;
}

@mixin transitionTransform($time, $ease) {
  -webkit-transition: -webkit-transform $time $ease;
  -moz-transition: -moz-transform $time $ease;
  -ie-transition: -ie-transform $time $ease;
  -o-transition: -o-transform $time $ease;
  transition: transform $time $ease;
}

@mixin transitionTransformWithStuff($time, $ease, $stuff) {
  -webkit-transition: -webkit-transform $time $ease, $stuff;
  -moz-transition: -moz-transform $time $ease, $stuff;
  -ie-transition: -ie-transform $time $ease, $stuff;
  -o-transition: -o-transform $time $ease, $stuff;
  transition: transform $time $ease, $stuff;
}

@mixin menuButton() {
  background: $menuHighlightColor;
  text-decoration: none;
  display: inline-block;
}

@mixin hr-thick() {
  border-top: 1px solid lighten(desaturate($headerBg, 20%), 50%);
  border-bottom: 3px solid lighten(desaturate($headerBg, 20%), 50%);
  height: 0;
  width: 100%;
}

@mixin h1() {
  margin-bottom: 10px;
  font-size: 26px;
  line-height: 31px;
  letter-spacing: -1px;
  text-overflow: ellipsis;
  overflow: hidden;
}

$h4FontSize: 20px;

@mixin h2() {
  font-size: 35px;
  margin: 0 0 13px 0;
  line-height: 40px;
  font-weight: 400;
  letter-spacing: -1px;
}

@mixin h4() {
  font-size: $h4FontSize;
  line-height: 26px;
  margin-bottom: 7px;
  padding-bottom: 3px;
  font-weight: 400;
}

@mixin overflowText() {
  overflow: hidden;
  display: block;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin data-wrapper() {
  background: #fff;
  overflow-x: hidden;
  overflow-y: auto;
  -webkit-overflow-scroll: touch;
  border-radius: 8px;
  border: 1px solid #c0c3ce;
  box-shadow: 0 1px 1px 1px rgba(0,0,0,.2);
}

@mixin tallDarkButton() {
  padding: 15px 9px 14px;
}

$errorTextColor: #666;
$errorBg: darken($headerBg, 20%);
$errorMobileBg: #C1C7DA;
$formTextColor: #fff;
$messageBgColor: $headerBg;

@mixin messageBox() {
  border-radius: 10px;
  display: inline-block;
  margin: 10px 0;
}



@mixin homeWell {
  background: $homeDarkBg;
  border-top: 1px solid $homeDarkBorder;
  border-bottom: 1px solid $homeDarkBorder;
}

@mixin homeText() {
  font-size: 18px;
  @include latoFontFamily();
  font-weight: 300;
  line-height: 28px;
}

$voteBottomBgColor: lighten($btnBlueTopColor, 12%);

@mixin voteButton() {
  @include linear-gradient(to top, $btnBlueTopColor, $voteBottomBgColor);
  color: #fff !important;
  text-shadow: 1px 1px 0 #3A97DE;
  text-decoration: none !important;
  box-shadow: inset 0 1px 0 rgba(28, 85, 184, 0.52);
  border-radius: 50px;
  padding: 5px 0;
  text-align: center;
}

@mixin voteButtonHover() {
  @include linear-gradient(to top, $voteBottomBgColor, $btnBlueTopColor);
}

/*  This keyframe is for the bobbing left and right arrow. */
@include keyframes(jiggle-horizontal) {
  0% {
    @include transform(translate(0, 0px));
  }

  50% {
    @include transform(translate(5px, 0));
  }

  100% {
    @include transform(translate(0, 0px));
  }
}

@mixin jiggle-horizontal() {
  @include animation-name(jiggle-horizontal);
  @include animation-duration(2s);
  @include animation-iteration-count(infinite);
}

@mixin grandeMenuBorder() {
  border-top: 0;
  border-width: 3px;
  border-color: #F4F4F4;
  box-shadow: none;
}

@function text-color($color) {
  @if (lightness($color) > 55) {
    @return #000000; // Lighter bg, return dark color
  } @else {
    @return #ffffff; // Darker bg, return light color
  }
}

@mixin clip-path($shape) {
  -webkit-clip-path: $shape;
  clip-path: $shape;
}

@mixin flex-display() {
  display: -moz-flex;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex !important;
}

@mixin widgetBox() {
  background: $widgetBoxBg;
  border: 1px solid $dividerColor;
  padding: 15px;
  position: relative;
  border-radius: 4px;
}

@mixin flex-centered() {
  @include flex-display();
  @include align-items(center);
  @include justify-content(center);
}

$arrowClip: polygon(46% 86%, 54% 86%, 100% 61%, 100% 73%, 54% 100%, 46% 100%, 0 73%, 0 61%);

@mixin arrowDown() {
  position: absolute;
  bottom: -10px;
  left: 50%;
  content: "";
  height: 21px;
  @include clip-path($arrowClip);
  width: 22px;
  margin-left: -11px;
}

@mixin noClipPathArrow() {
  height: 3px !important;
  clip-path: none !important;
  bottom: -13px !important;
}

@mixin errors() {
  background: $lightRed;
  color: $warningBg;
  border-radius: 3px;
  padding: 10px;
  display: inline-block;
}

@mixin progressBar() {
  background: $headerBg;
  height: 40px;
}

@mixin highlightGradient() {
  @include linear-gradient(-180deg, $hightlightMarketingTop 0%, $hightlightMarketingBottom 100%);
}

@mixin quoteBefore() {
  content: '“';
  position: absolute;
  left: -25px;
  top: 51px;
  font-size: 130px;
  color: $blockquoteQuoteColor;
  opacity: 0.3;
  z-index: 1;
}

@mixin quoteAfter() {
  content: '”';
  position: absolute;
  right: 18px;
  bottom: -25px;
  font-size: 130px;
  color: $blockquoteQuoteColor;
  opacity: 0.3;
  z-index: 1;
}

$btnLightBottomColor: darken($btnLightTopColor, 10%);
$danger: #C30E0E;

@mixin buttonPrimaryActive() {
  @include linear-gradient(to top, #5cb8ff, #6cc8ff);
}

$questionColors: #03C58D #30419B #FD5455 #354658 #fcbe2d #59c6fb $headerBg $warningBg $gray $greenBright;

@mixin pointH2() {
  color: #184651;
}

.recognize-color {
  color: $recognizeColor
}
